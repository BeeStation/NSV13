//THIS FILE IS AUTOMATICALLY GENERATED BY AUXMOS, PLEASE DO NOT TOUCH IT
//PROC DEFINITIONS MAY MOVE AROUND, THIS IS NORMAL

/* This comment bypasses grep checks */ /var/__auxmos

/proc/__detect_auxmos()
	if (world.system_type == UNIX)
		return __auxmos = "libauxmos"
	else
		return __auxmos = "auxmos"

#define AUXMOS (__auxmos || __detect_auxmos())

/turf/proc/__update_auxtools_turf_adjacency_info()
	return call_ext(AUXMOS, "hook_infos_ffi")(src)

/turf/proc/update_air_ref(flag)
	return call_ext(AUXMOS, "hook_register_turf_ffi")(src, flag)

/datum/controller/subsystem/air/proc/process_turfs_auxtools(remaining)
	return call_ext(AUXMOS, "process_turf_hook_ffi")(src, remaining)

/datum/controller/subsystem/air/proc/finish_turf_processing_auxtools(time_remaining)
	return call_ext(AUXMOS, "finish_process_turfs_ffi")(time_remaining)

/datum/controller/subsystem/air/proc/thread_running()
	return call_ext(AUXMOS, "thread_running_hook_ffi")()

/proc/finalize_gas_refs()
	return call_ext(AUXMOS, "finalize_gas_refs_ffi")()

/datum/controller/subsystem/air/proc/auxtools_update_reactions()
	return call_ext(AUXMOS, "update_reactions_ffi")()

/proc/auxtools_atmos_init(gas_data)
	return call_ext(AUXMOS, "hook_init_ffi")(gas_data)

/proc/_auxtools_register_gas(gas)
	return call_ext(AUXMOS, "hook_register_gas_ffi")(gas)

/datum/controller/subsystem/air/proc/process_turf_equalize_auxtools(remaining)
	return call_ext(AUXMOS, "equalize_hook_ffi")(src, remaining)

/datum/controller/subsystem/air/proc/process_excited_groups_auxtools(remaining)
	return call_ext(AUXMOS, "groups_hook_ffi")(src, remaining)

/datum/gas_mixture/proc/__auxtools_parse_gas_string(string)
	return call_ext(AUXMOS, "parse_gas_string_ffi")(src, string)

/datum/controller/subsystem/air/proc/get_max_gas_mixes()
	return call_ext(AUXMOS, "hook_max_gas_mixes_ffi")()

/datum/controller/subsystem/air/proc/get_amt_gas_mixes()
	return call_ext(AUXMOS, "hook_amt_gas_mixes_ffi")()

/proc/equalize_all_gases_in_list(gas_list)
	return call_ext(AUXMOS, "equalize_all_hook_ffi")(gas_list)

/datum/gas_mixture/proc/get_oxidation_power(temp)
	return call_ext(AUXMOS, "oxidation_power_hook_ffi")(src, temp)

/datum/gas_mixture/proc/get_fuel_amount(temp)
	return call_ext(AUXMOS, "fuel_amount_hook_ffi")(src, temp)

/datum/gas_mixture/proc/equalize_with(total)
	return call_ext(AUXMOS, "equalize_with_hook_ffi")(src, total)

/datum/gas_mixture/proc/transfer_ratio_to(other, ratio)
	return call_ext(AUXMOS, "transfer_ratio_hook_ffi")(src, other, ratio)

/datum/gas_mixture/proc/transfer_to(other, moles)
	return call_ext(AUXMOS, "transfer_hook_ffi")(src, other, moles)

/datum/gas_mixture/proc/adjust_heat(temp)
	return call_ext(AUXMOS, "adjust_heat_hook_ffi")(src, temp)

/datum/gas_mixture/proc/react(holder)
	return call_ext(AUXMOS, "react_hook_ffi")(src, holder)

/datum/gas_mixture/proc/compare(other)
	return call_ext(AUXMOS, "compare_hook_ffi")(src, other)

/datum/gas_mixture/proc/clear()
	return call_ext(AUXMOS, "clear_hook_ffi")(src)

/datum/gas_mixture/proc/mark_immutable()
	return call_ext(AUXMOS, "mark_immutable_hook_ffi")(src)

/datum/gas_mixture/proc/scrub_into(into, ratio_v, gas_list)
	return call_ext(AUXMOS, "scrub_into_hook_ffi")(src, into, ratio_v, gas_list)

/datum/gas_mixture/proc/get_by_flag(flag_val)
	return call_ext(AUXMOS, "get_by_flag_hook_ffi")(src, flag_val)

/datum/gas_mixture/proc/__remove_by_flag(into, flag_val, amount_val)
	return call_ext(AUXMOS, "remove_by_flag_hook_ffi")(src, into, flag_val, amount_val)

/datum/gas_mixture/proc/divide(num_val)
	return call_ext(AUXMOS, "divide_hook_ffi")(src, num_val)

/datum/gas_mixture/proc/multiply(num_val)
	return call_ext(AUXMOS, "multiply_hook_ffi")(src, num_val)

/datum/gas_mixture/proc/subtract(num_val)
	return call_ext(AUXMOS, "subtract_hook_ffi")(src, num_val)

/datum/gas_mixture/proc/add(num_val)
	return call_ext(AUXMOS, "add_hook_ffi")(src, num_val)

/datum/gas_mixture/proc/adjust_multi(...)
	var/list/args_copy = args.Copy()
	args_copy.Insert(1, src)
	return call_ext(AUXMOS, "adjust_multi_hook_ffi")(arglist(args_copy))

/datum/gas_mixture/proc/adjust_moles_temp(id_val, num_val, temp_val)
	return call_ext(AUXMOS, "adjust_moles_temp_hook_ffi")(src, id_val, num_val, temp_val)

/datum/gas_mixture/proc/adjust_moles(id_val, num_val)
	return call_ext(AUXMOS, "adjust_moles_hook_ffi")(src, id_val, num_val)

/datum/gas_mixture/proc/set_moles(gas_id, amt_val)
	return call_ext(AUXMOS, "set_moles_hook_ffi")(src, gas_id, amt_val)

/datum/gas_mixture/proc/get_moles(gas_id)
	return call_ext(AUXMOS, "get_moles_hook_ffi")(src, gas_id)

/datum/gas_mixture/proc/set_volume(vol_arg)
	return call_ext(AUXMOS, "set_volume_hook_ffi")(src, vol_arg)

/datum/gas_mixture/proc/partial_heat_capacity(gas_id)
	return call_ext(AUXMOS, "partial_heat_capacity_ffi")(src, gas_id)

/datum/gas_mixture/proc/set_temperature(arg_temp)
	return call_ext(AUXMOS, "set_temperature_hook_ffi")(src, arg_temp)

/datum/gas_mixture/proc/get_gases()
	return call_ext(AUXMOS, "get_gases_hook_ffi")(src)

/datum/gas_mixture/proc/temperature_share(...)
	var/list/args_copy = args.Copy()
	args_copy.Insert(1, src)
	return call_ext(AUXMOS, "temperature_share_hook_ffi")(arglist(args_copy))

/datum/gas_mixture/proc/copy_from(giver)
	return call_ext(AUXMOS, "copy_from_hook_ffi")(src, giver)

/datum/gas_mixture/proc/__remove(into, amount_arg)
	return call_ext(AUXMOS, "remove_hook_ffi")(src, into, amount_arg)

/datum/gas_mixture/proc/__remove_ratio(into, ratio_arg)
	return call_ext(AUXMOS, "remove_ratio_hook_ffi")(src, into, ratio_arg)

/datum/gas_mixture/proc/merge(giver)
	return call_ext(AUXMOS, "merge_hook_ffi")(src, giver)

/datum/gas_mixture/proc/thermal_energy()
	return call_ext(AUXMOS, "thermal_energy_hook_ffi")(src)

/datum/gas_mixture/proc/return_volume()
	return call_ext(AUXMOS, "return_volume_hook_ffi")(src)

/datum/gas_mixture/proc/return_temperature()
	return call_ext(AUXMOS, "return_temperature_hook_ffi")(src)

/datum/gas_mixture/proc/return_pressure()
	return call_ext(AUXMOS, "return_pressure_hook_ffi")(src)

/datum/gas_mixture/proc/total_moles()
	return call_ext(AUXMOS, "total_moles_hook_ffi")(src)

/datum/gas_mixture/proc/set_min_heat_capacity(arg_min)
	return call_ext(AUXMOS, "min_heat_cap_hook_ffi")(src, arg_min)

/datum/gas_mixture/proc/heat_capacity()
	return call_ext(AUXMOS, "heat_cap_hook_ffi")(src)

/datum/gas_mixture/proc/__gasmixture_unregister()
	return call_ext(AUXMOS, "unregister_gasmixture_hook_ffi")(src)

/datum/gas_mixture/proc/__gasmixture_register()
	return call_ext(AUXMOS, "register_gasmixture_hook_ffi")(src)

/proc/process_atmos_callbacks(remaining)
	return call_ext(AUXMOS, "atmos_callback_handle_ffi")(remaining)

